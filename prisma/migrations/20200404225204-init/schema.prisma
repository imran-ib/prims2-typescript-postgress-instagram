// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String  @id @default(uuid())
  avatar          String?
  username        String    @unique
  email           String    @unique
  firstName       String?   @default("")
  lastName        String?   @default("")
  fullName        String?
  bio             String
  loginSecret     String?
  posts           Post[]    @relation("WrittenPosts")
  likes           Like[]
  comments        Comment[]
  rooms           Room[]
  followedBy      User[]    @relation("UserFollows", references: [id])
  following       User[]    @relation("UserFollows", references: [id])
  SendMessege     Message[] @relation("SendMessege")
  ReceiveMessage  Message?  @relation("ReceiveMessage")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
}

model Post {
  id              String  @id @default(uuid())
  location        String?
  caption         String
  author          User    @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId        String
  files           File[]
  likes           Like[]
  comments        Comment[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


model Like {
 id    String  @id @default(uuid())
  user            User    @relation(fields: [userId], references: [id])
  userId          String
  post            Post @relation(fields: [postId], references: [id])
  postId          String
 createdAt        DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


model Comment {
   id    String  @id @default(uuid())
  text              String
  author            User     @relation(fields: [authorId], references: [id])
  authorId          String
  post              Post @relation(fields: [postId], references: [id])
  postId            String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}


model File {
   id    String  @id @default(uuid())
  file      String
  post Post @relation(fields: [postId], references: [id])
  postId String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


model Room {
 id    String  @id @default(uuid())
  participants    User[]   @relation(references: [id])
  messeges        Message[] @relation(references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


model Message {
 id    String  @id @default(uuid())
  room            Room  
  from            User      @relation(name:"SendMessege", fields: [senderId], references: [id])
  to              User      @relation(name: "ReceiveMessage", fields: [receiverId], references: [id])
  senderId        String
  receiverId      String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

 